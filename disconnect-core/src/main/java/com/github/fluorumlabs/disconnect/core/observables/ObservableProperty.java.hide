package com.github.fluorumlabs.disconnect.zero.observable;

import javax.validation.ConstraintViolation;
import javax.validation.Validator;
import java.util.HashSet;
import java.util.Set;


public class ObservableProperty<BEAN, VALUE> extends ObservableBean<VALUE> {
    private final ObservableBean<BEAN> parentBean;
    private final String propertyName;

    ObservableProperty(Class<VALUE> valueClass, ObservableBean<BEAN> parentBean, String propertyName) {
        super(valueClass);
        this.parentBean = parentBean;
        this.propertyName = propertyName;
    }

    @Override
    protected void pushValidatedMessage(Validated<VALUE> observable, VALUE value, Validator validator) {
        Set<ConstraintViolation<Object>> violations = new HashSet<>();
        validator.validateValue(parentBean.getValueClass(), propertyName, value).forEach(beanConstraintViolation -> violations.add((ConstraintViolation<Object>) beanConstraintViolation));
        if (value != null) {
            validator.validate(value).forEach(beanConstraintViolation -> violations.add((ConstraintViolation<Object>) beanConstraintViolation));
        }

        observable.pushNewValue(Pair.of(value, violations));
    }
}
